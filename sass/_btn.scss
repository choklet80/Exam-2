.btn{
    cursor: pointer;
    text-transform: uppercase;
    padding: 0 50px;
    height: 50px;
    border: 1px solid #2c4058;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #2c4058;
    font-size: 14px;

    &--submit{
        position: absolute;
        bottom: 0;
        right: 0;
    }
}
// Animate the size, inside
.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

//=== Set button colors
// If you wonder why use Sass vars or CSS custom properties...
  // Make a map with the class names and matching colors
$colors: (
  fill: #2c4058,
);

// Sass variables compile to a static string; CSS variables are dynamic and inherited
  // Loop through the map and set CSS custom properties using Sass variables
@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 0deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
.btn {  
  color: var(--color);
  transition: 0.45s;
  
  &:hover,
  &:focus { 
    border-color: var(--hover);
    color: #fff;
  }
}